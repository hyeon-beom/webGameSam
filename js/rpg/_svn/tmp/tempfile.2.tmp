
function nxGameGround(strLayerID, n4Width, n4Height, strBGIMG)
{
	NxControl.apply(this, arguments);
	
	this.setWidth(n4Width);
	this.setHeight(n4Height);
	this.playUnit	= null;
	this.imgBG		= null;
	this.GUI		= null;
	//this.style.overflow		= "auto";

	this.doLater=function(strMethod, interval, strID){	setTimeout("document.getElementById('"+(strID?strID:this.id)+"').NxControl."+strMethod, interval);	}
	this.init=function()
	{
		this.loadBG();
		this.playerUnitLoad();
		this.npcUnitLoad();
		this.addKeyEvent();
		this.loadGUI();
	}
	this.doLater("init()",500);
	
	this.loadBG = function()
	{
		this.imgBG = new NxControl("gameBG");
		this.add(this.imgBG);
		this.imgBG.src = strBGIMG;
		this.imgBG.setWidth(this.getWidth()*2);
		this.imgBG.setHeight(this.getHeight());
		this.imgBG.setLayerIndex(nxGameLayer.n4LayerIndex_BG);
		this.imgBG.style.position="relative";
		this.imgBG.show();
	}
	this.loadGUI=function()
	{
		this.GUI = new nxGameGUI('GUI',this.getWidth(), this.getHeight());
		this.GUI.setLayerIndex(nxGameLayer.n4LayerIndex_GUI);
		this.add(this.GUI);
		this.GUI.show();
	}
	this.setPlayerCamera=function()
	{
		var pos = this.playUnit.getPosition();
		var posCamMoveStart = this.getWidth()/2;
		var n4RightEnd		= this.imgBG.getWidth()-posCamMoveStart;
		if(pos.x> posCamMoveStart && pos.x< n4RightEnd )//debug(this.playUnit.strCharacterName);
		{
			var n4Absolute = posCamMoveStart-pos.x;
			if(this.imgBG.getLeft()!=n4Absolute)
				this.imgBG.setLeft(n4Absolute);
		}
		
	}
	this.camThread = function()
	{
		this.setPlayerCamera();
	}
	this.getRealEnableRect=function()
	{
		var x = 20;
		var y = this.imgBG.getHeight()*0.5;
		var width	= this.imgBG.getWidth()-(x*2);
		var height	= this.imgBG.getHeight()-y;
		return new nxRectangle(x, y, width, height);
	}	
	
	this.playerUnitLoad=function()
	{
		this.playUnit = new nxWarriorUnit("p1", false, 1);//nxWarriorUnit("p1", false, 1);
		this.imgBG.add(this.playUnit);
		this.playUnit.isMyUnit=true;//!!
		this.playUnit.setTop(250);
		this.playUnit.show();
		
		var wizard = new nxWizardUnit("p2", true, 1);//nxWizardUnit
		this.imgBG.add(wizard);
		//wizard.setLeft(400);
		wizard.setTop(200);
		wizard.show();
		
		this.camThread();
	}
	this.npcUnitLoad=function()
	{
		for(var i=5;i<7;i++)
		{	
			var playUnit2 = new nxThiefUnit("p"+i, true, 2);
			this.imgBG.add(playUnit2);
			playUnit2.setLeft((i*100));
			playUnit2.n1MotionDirection	= nxUnitMotion.DirectionInvert;
			playUnit2.setTop(250);
			playUnit2.show();
		}
		
		var playUnit2 = new nxDumanUnit("p"+i, true, 2);
		this.imgBG.add(playUnit2);
		playUnit2.setLeft(400);
		playUnit2.n1MotionDirection	= nxUnitMotion.DirectionInvert;
		playUnit2.setTop(200);
		playUnit2.show();
		
		var thrower = new nxThiefThrowUnit("p100", true, 2);
		this.imgBG.add(thrower);
		thrower.setLeft(500);
		thrower.n1MotionDirection	= nxUnitMotion.DirectionInvert;
		thrower.setTop(350);
		thrower.show();
		
	}
	this.addKeyEvent=function()
	{
		var playUnit = this.playUnit;
		var isEndKey = 1;
		document.body.onkeydown=function(e)
		{
			if(isEndKey==0)
				return;

			isEndKey = 0;
			var keyCode = 0;
			if(document.all)
				keyCode=event.keyCode
			else
				keyCode=e.which;

			playUnit.receiveKeyDownEvent(keyCode);
		}
		document.body.onkeyup=function(e)
		{
			var keyCode = 0;
			if(document.all)
				keyCode=event.keyCode
			else
				keyCode=e.which;

			playUnit.receiveKeyUpEvent(keyCode);

			isEndKey = 1;
		}

		document.body.onkeypress=function(e)
		{
			if(isEndKey==0)
				return;

			isEndKey = 0;
			var keyCode = 0;
			if(document.all)
				keyCode=event.keyCode
			else
				keyCode=e.which;

			playUnit.receiveKeyDownEvent(keyCode);

		}
	}

	/*
	this.debugWindow = new NxControl('debugLayer');
	//this.add(this.debugWindow);
	this.debugWindow.setLayerIndex(100);
	this.debugWindow.setWidth(300);
	this.debugWindow.setHeight(400);
	this.debugWindow.setFontSize(15);
	this.debugWindow.setBG('');
	//this.debugWindow.setText("<span style='background:black'>이동: ←좌 →우 ↑상 ↓하 →→달리기		<br>		무기 착용/해제 : R		<br>		일반공격 : S</span>");
	this.debugWindow.style.overflow = "auto";
	this.debugWindow.show();
	*/

}
nxGameGround.prototype = new NxControl();
nxGameGround.prototype.constructor = nxGameGround;

var nxGameLayer = new function _nxGameLayer()
{
	n4LayerIndex_BG		= 0;
	n4LayerIndex_GUI	= 10;
}